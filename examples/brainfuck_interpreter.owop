// add 3 1
literal 3;
add;
dupe;
dupe;
get;
literal 1;
add;
store;

// open 0 66
dupe;
get;
while {
	discard;
	
	// clear 0
	dupe;
	literal 0;
	store;
	
	// clear 2
	literal 2;
	add;
	dupe;
	literal 0;
	store;
	
	// add 0 2
	dupe;
	dupe;
	get;
	literal 2;
	add;
	store;
	
	// add 1 1
	literal 1;
	add;
	dupe;
	dupe;
	get;
	literal 1;
	add;
	store;
	
	// add 1 7
	literal 1;
	add;
	dupe;
	dupe;
	get;
	literal 7;
	add;
	store;
	
	// open 0 11
	dupe;
	get;
	while {
		discard;
		
		// add -1 4
		literal 1;
		sub;
		dupe;
		dupe;
		get;
		literal 4;
		add;
		store;
		
		// add 2 2
		literal 2;
		add;
		dupe;
		dupe;
		get;
		literal 2;
		add;
		store;
		
		// sub -1 1
		literal 1;
		sub;
		dupe;
		dupe;
		get;
		literal 1;
		sub;
		add;
		literal 1;
		literal 0;
		hexmult;
		literal 0;
		hexmult;
		mod;
		store;
		
		// close 0 7
		dupe;
		get;
	}
	discard;
	
	// add 0 2
	dupe;
	dupe;
	get;
	literal 2;
	add;
	store;
	
	// add 2 1
	literal 2;
	add;
	dupe;
	dupe;
	get;
	literal 1;
	add;
	store;
	
	// add 1 1
	literal 1;
	add;
	dupe;
	dupe;
	get;
	literal 1;
	add;
	store;
	
	// add 1 5
	literal 1;
	add;
	dupe;
	dupe;
	get;
	literal 5;
	add;
	store;
	
	// open 0 20
	dupe;
	get;
	while {
		discard;
		
		// add 1 2
		literal 1;
		add;
		dupe;
		dupe;
		get;
		literal 2;
		add;
		store;
		
		// add 1 6
		literal 1;
		add;
		dupe;
		dupe;
		get;
		literal 6;
		add;
		store;
		
		// sub -2 1
		literal 2;
		sub;
		dupe;
		dupe;
		get;
		literal 1;
		sub;
		add;
		literal 1;
		literal 0;
		hexmult;
		literal 0;
		hexmult;
		mod;
		store;
		
		// close 0 16
		dupe;
		get;
	}
	discard;
	
	// add 0 1
	dupe;
	dupe;
	get;
	literal 1;
	add;
	store;
	
	// input 3
	literal 3;
	add;
	dupe;
	input;
	add;
	literal 1;
	literal 0;
	hexmult;
	literal 0;
	hexmult;
	mod;
	store;
	
	// add -1 2
	literal 1;
	sub;
	dupe;
	dupe;
	get;
	literal 2;
	add;
	store;
	
	// open 0 65
	dupe;
	get;
	while {
		discard;
		
		// open 0 34
		dupe;
		get;
		while {
			discard;
			
			// move 0 1
			literal 1;
			add;
			
			// open 0 29
			dupe;
			get;
			while {
				discard;
				
				// sub 0 1
				dupe;
				dupe;
				get;
				literal 1;
				sub;
				add;
				literal 1;
				literal 0;
				hexmult;
				literal 0;
				hexmult;
				mod;
				store;
				
				// close 2 27
				literal 2;
				add;
				dupe;
				get;
			}
			discard;
			
			// move 0 -1
			literal 1;
			sub;
			
			// open 0 32
			dupe;
			get;
			while {
				discard;
				
				// close 2 31
				literal 2;
				add;
				dupe;
				get;
			}
			discard;
			
			// sub -2 1
			literal 2;
			sub;
			dupe;
			dupe;
			get;
			literal 1;
			sub;
			add;
			literal 1;
			literal 0;
			hexmult;
			literal 0;
			hexmult;
			mod;
			store;
			
			// close 0 25
			dupe;
			get;
		}
		discard;
		
		// scanl -1
		literal 1;
		sub;
		
		// open 0
		dupe;
		get;
		while {
			discard;
			
			// move 0 -1
			literal 1;
			sub;
			
			// close 0
			dupe;
			get;
		}
		discard;
		
		// add -1 1
		literal 1;
		sub;
		dupe;
		dupe;
		get;
		literal 1;
		add;
		store;
		
		// scanr 2
		literal 2;
		add;
		
		// open 0
		dupe;
		get;
		while {
			discard;
			
			// move 0 1
			literal 1;
			add;
			
			// close 0
			dupe;
			get;
		}
		discard;
		
		// move 0 1
		literal 1;
		add;
		
		// open 0 64
		dupe;
		get;
		while {
			discard;
			
			// add -1 1
			literal 1;
			sub;
			dupe;
			dupe;
			get;
			literal 1;
			add;
			store;
			
			// sub 1 1
			literal 1;
			add;
			dupe;
			dupe;
			get;
			literal 1;
			sub;
			add;
			literal 1;
			literal 0;
			hexmult;
			literal 0;
			hexmult;
			mod;
			store;
			
			// open 0 47
			dupe;
			get;
			while {
				discard;
				
				// open 0 46
				dupe;
				get;
				while {
					discard;
					
					// add -1 1
					literal 1;
					sub;
					dupe;
					dupe;
					get;
					literal 1;
					add;
					store;
					
					// sub 1 1
					literal 1;
					add;
					dupe;
					dupe;
					get;
					literal 1;
					sub;
					add;
					literal 1;
					literal 0;
					hexmult;
					literal 0;
					hexmult;
					mod;
					store;
					
					// close 0 43
					dupe;
					get;
				}
				discard;
				
				// close 1 42
				literal 1;
				add;
				dupe;
				get;
			}
			discard;
			
			// move 0 -1
			literal 1;
			sub;
			
			// open 0 63
			dupe;
			get;
			while {
				discard;
				
				// open 0 52
				dupe;
				get;
				while {
					discard;
					
					// clear 0
					dupe;
					literal 0;
					store;
					
					// close -1 50
					literal 1;
					sub;
					dupe;
					get;
				}
				discard;
				
				// add 0 2
				dupe;
				dupe;
				get;
				literal 2;
				add;
				store;
				
				// sub -1 1
				literal 1;
				sub;
				dupe;
				dupe;
				get;
				literal 1;
				sub;
				add;
				literal 1;
				literal 0;
				hexmult;
				literal 0;
				hexmult;
				mod;
				store;
				
				// open 0 62
				dupe;
				get;
				while {
					discard;
					
					// add -1 9
					literal 1;
					sub;
					dupe;
					dupe;
					get;
					literal 9;
					add;
					store;
					
					// move 0 1
					literal 1;
					add;
					
					// open 0 61
					dupe;
					get;
					while {
						discard;
						
						// sub -1 1
						literal 1;
						sub;
						dupe;
						dupe;
						get;
						literal 1;
						sub;
						add;
						literal 1;
						literal 0;
						hexmult;
						literal 0;
						hexmult;
						mod;
						store;
						
						// sub 1 1
						literal 1;
						add;
						dupe;
						dupe;
						get;
						literal 1;
						sub;
						add;
						literal 1;
						literal 0;
						hexmult;
						literal 0;
						hexmult;
						mod;
						store;
						
						// close 0 58
						dupe;
						get;
					}
					discard;
					
					// close 2 55
					literal 2;
					add;
					dupe;
					get;
				}
				discard;
				
				// close 2 49
				literal 2;
				add;
				dupe;
				get;
			}
			discard;
			
			// close 0 39
			dupe;
			get;
		}
		discard;
		
		// close -2 24
		literal 2;
		sub;
		dupe;
		get;
	}
	discard;
	
	// close -1 1
	literal 1;
	sub;
	dupe;
	get;
}
discard;

// move 0 -1
literal 1;
sub;

// open 0 196
dupe;
get;
while {
	discard;
	
	// scanl 0
	
	// open 0
	dupe;
	get;
	while {
		discard;
		
		// move 0 -1
		literal 1;
		sub;
		
		// close 0
		dupe;
		get;
	}
	discard;
	
	// move 0 1
	literal 1;
	add;
	
	// open 0 82
	dupe;
	get;
	while {
		discard;
		
		// scanr 0
		
		// open 0
		dupe;
		get;
		while {
			discard;
			
			// move 0 1
			literal 1;
			add;
			
			// close 0
			dupe;
			get;
		}
		discard;
		
		// move 0 2
		literal 2;
		add;
		
		// open 0 75
		dupe;
		get;
		while {
			discard;
			
			// close 2 74
			literal 2;
			add;
			dupe;
			get;
		}
		discard;
		
		// add 0 1
		dupe;
		dupe;
		get;
		literal 1;
		add;
		store;
		
		// open 0 78
		dupe;
		get;
		while {
			discard;
			
			// close -2 77
			literal 2;
			sub;
			dupe;
			get;
		}
		discard;
		
		// scanl -1
		literal 1;
		sub;
		
		// open 0
		dupe;
		get;
		while {
			discard;
			
			// move 0 -1
			literal 1;
			sub;
			
			// close 0
			dupe;
			get;
		}
		discard;
		
		// add -1 1
		literal 1;
		sub;
		dupe;
		dupe;
		get;
		literal 1;
		add;
		store;
		
		// sub 2 1
		literal 2;
		add;
		dupe;
		dupe;
		get;
		literal 1;
		sub;
		add;
		literal 1;
		literal 0;
		hexmult;
		literal 0;
		hexmult;
		mod;
		store;
		
		// close 0 71
		dupe;
		get;
	}
	discard;
	
	// scanr 1
	literal 1;
	add;
	
	// open 0
	dupe;
	get;
	while {
		discard;
		
		// move 0 1
		literal 1;
		add;
		
		// close 0
		dupe;
		get;
	}
	discard;
	
	// add 0 1
	dupe;
	dupe;
	get;
	literal 1;
	add;
	store;
	
	// open 0 87
	dupe;
	get;
	while {
		discard;
		
		// sub 0 1
		dupe;
		dupe;
		get;
		literal 1;
		sub;
		add;
		literal 1;
		literal 0;
		hexmult;
		literal 0;
		hexmult;
		mod;
		store;
		
		// close 2 85
		literal 2;
		add;
		dupe;
		get;
	}
	discard;
	
	// move 0 -4
	literal 4;
	sub;
	
	// open 0 124
	dupe;
	get;
	while {
		discard;
		
		// open 0 91
		dupe;
		get;
		while {
			discard;
			
			// close -2 90
			literal 2;
			sub;
			dupe;
			get;
		}
		discard;
		
		// scanl -1
		literal 1;
		sub;
		
		// open 0
		dupe;
		get;
		while {
			discard;
			
			// move 0 -1
			literal 1;
			sub;
			
			// close 0
			dupe;
			get;
		}
		discard;
		
		// add 0 1
		dupe;
		dupe;
		get;
		literal 1;
		add;
		store;
		
		// move 0 -2
		literal 2;
		sub;
		
		// open 0 117
		dupe;
		get;
		while {
			discard;
			
			// add 0 1
			dupe;
			dupe;
			get;
			literal 1;
			add;
			store;
			
			// add 1 1
			literal 1;
			add;
			dupe;
			dupe;
			get;
			literal 1;
			add;
			store;
			
			// sub -2 1
			literal 2;
			sub;
			dupe;
			dupe;
			get;
			literal 1;
			sub;
			add;
			literal 1;
			literal 0;
			hexmult;
			literal 0;
			hexmult;
			mod;
			store;
			
			// open 0 111
			dupe;
			get;
			while {
				discard;
				
				// sub 1 2
				literal 1;
				add;
				dupe;
				dupe;
				get;
				literal 2;
				sub;
				add;
				literal 1;
				literal 0;
				hexmult;
				literal 0;
				hexmult;
				mod;
				store;
				
				// add 1 1
				literal 1;
				add;
				dupe;
				dupe;
				get;
				literal 1;
				add;
				store;
				
				// sub -2 1
				literal 2;
				sub;
				dupe;
				dupe;
				get;
				literal 1;
				sub;
				add;
				literal 1;
				literal 0;
				hexmult;
				literal 0;
				hexmult;
				mod;
				store;
				
				// open 0 110
				dupe;
				get;
				while {
					discard;
					
					// add 1 1
					literal 1;
					add;
					dupe;
					dupe;
					get;
					literal 1;
					add;
					store;
					
					// move 0 -1
					literal 1;
					sub;
					
					// open 0 109
					dupe;
					get;
					while {
						discard;
						
						// add 2 1
						literal 2;
						add;
						dupe;
						dupe;
						get;
						literal 1;
						add;
						store;
						
						// sub -2 1
						literal 2;
						sub;
						dupe;
						dupe;
						get;
						literal 1;
						sub;
						add;
						literal 1;
						literal 0;
						hexmult;
						literal 0;
						hexmult;
						mod;
						store;
						
						// close 0 106
						dupe;
						get;
					}
					discard;
					
					// close 0 103
					dupe;
					get;
				}
				discard;
				
				// close 0 99
				dupe;
				get;
			}
			discard;
			
			// move 0 1
			literal 1;
			add;
			
			// open 0 116
			dupe;
			get;
			while {
				discard;
				
				// add -1 1
				literal 1;
				sub;
				dupe;
				dupe;
				get;
				literal 1;
				add;
				store;
				
				// sub 1 1
				literal 1;
				add;
				dupe;
				dupe;
				get;
				literal 1;
				sub;
				add;
				literal 1;
				literal 0;
				hexmult;
				literal 0;
				hexmult;
				mod;
				store;
				
				// close 0 113
				dupe;
				get;
			}
			discard;
			
			// close -1 95
			literal 1;
			sub;
			dupe;
			get;
		}
		discard;
		
		// add 0 2
		dupe;
		dupe;
		get;
		literal 2;
		add;
		store;
		
		// sub 2 2
		literal 2;
		add;
		dupe;
		dupe;
		get;
		literal 2;
		sub;
		add;
		literal 1;
		literal 0;
		hexmult;
		literal 0;
		hexmult;
		mod;
		store;
		
		// scanr 1
		literal 1;
		add;
		
		// open 0
		dupe;
		get;
		while {
			discard;
			
			// move 0 1
			literal 1;
			add;
			
			// close 0
			dupe;
			get;
		}
		discard;
		
		// move 0 2
		literal 2;
		add;
		
		// open 0 123
		dupe;
		get;
		while {
			discard;
			
			// close 2 122
			literal 2;
			add;
			dupe;
			get;
		}
		discard;
		
		// close 0 89
		dupe;
		get;
	}
	discard;
	
	// move 0 -2
	literal 2;
	sub;
	
	// open 0 166
	dupe;
	get;
	while {
		discard;
		
		// add 2 1
		literal 2;
		add;
		dupe;
		dupe;
		get;
		literal 1;
		add;
		store;
		
		// move 0 -1
		literal 1;
		sub;
		
		// open 0 131
		dupe;
		get;
		while {
			discard;
			
			// scanl 0
			
			// open 0
			dupe;
			get;
			while {
				discard;
				
				// move 0 -1
				literal 1;
				sub;
				
				// close 0
				dupe;
				get;
			}
			discard;
			
			// close -1 129
			literal 1;
			sub;
			dupe;
			get;
		}
		discard;
		
		// move 0 1
		literal 1;
		add;
		
		// open 0 162
		dupe;
		get;
		while {
			discard;
			
			// open 0 135
			dupe;
			get;
			while {
				discard;
				
				// close -2 134
				literal 2;
				sub;
				dupe;
				get;
			}
			discard;
			
			// scanl -1
			literal 1;
			sub;
			
			// open 0
			dupe;
			get;
			while {
				discard;
				
				// move 0 -1
				literal 1;
				sub;
				
				// close 0
				dupe;
				get;
			}
			discard;
			
			// add 0 1
			dupe;
			dupe;
			get;
			literal 1;
			add;
			store;
			
			// open 0 160
			dupe;
			get;
			while {
				discard;
				
				// sub 0 1
				dupe;
				dupe;
				get;
				literal 1;
				sub;
				add;
				literal 1;
				literal 0;
				hexmult;
				literal 0;
				hexmult;
				mod;
				store;
				
				// add -1 1
				literal 1;
				sub;
				dupe;
				dupe;
				get;
				literal 1;
				add;
				store;
				
				// sub 2 1
				literal 2;
				add;
				dupe;
				dupe;
				get;
				literal 1;
				sub;
				add;
				literal 1;
				literal 0;
				hexmult;
				literal 0;
				hexmult;
				mod;
				store;
				
				// open 0 154
				dupe;
				get;
				while {
					discard;
					
					// add -2 1
					literal 2;
					sub;
					dupe;
					dupe;
					get;
					literal 1;
					add;
					store;
					
					// add 1 2
					literal 1;
					add;
					dupe;
					dupe;
					get;
					literal 2;
					add;
					store;
					
					// sub 1 1
					literal 1;
					add;
					dupe;
					dupe;
					get;
					literal 1;
					sub;
					add;
					literal 1;
					literal 0;
					hexmult;
					literal 0;
					hexmult;
					mod;
					store;
					
					// open 0 153
					dupe;
					get;
					while {
						discard;
						
						// sub -1 1
						literal 1;
						sub;
						dupe;
						dupe;
						get;
						literal 1;
						sub;
						add;
						literal 1;
						literal 0;
						hexmult;
						literal 0;
						hexmult;
						mod;
						store;
						
						// move 0 1
						literal 1;
						add;
						
						// open 0 152
						dupe;
						get;
						while {
							discard;
							
							// add -2 1
							literal 2;
							sub;
							dupe;
							dupe;
							get;
							literal 1;
							add;
							store;
							
							// sub 2 1
							literal 2;
							add;
							dupe;
							dupe;
							get;
							literal 1;
							sub;
							add;
							literal 1;
							literal 0;
							hexmult;
							literal 0;
							hexmult;
							mod;
							store;
							
							// close 0 149
							dupe;
							get;
						}
						discard;
						
						// close 0 146
						dupe;
						get;
					}
					discard;
					
					// close 0 142
					dupe;
					get;
				}
				discard;
				
				// move 0 -1
				literal 1;
				sub;
				
				// open 0 159
				dupe;
				get;
				while {
					discard;
					
					// add 1 1
					literal 1;
					add;
					dupe;
					dupe;
					get;
					literal 1;
					add;
					store;
					
					// sub -1 1
					literal 1;
					sub;
					dupe;
					dupe;
					get;
					literal 1;
					sub;
					add;
					literal 1;
					literal 0;
					hexmult;
					literal 0;
					hexmult;
					mod;
					store;
					
					// close 0 156
					dupe;
					get;
				}
				discard;
				
				// close 1 138
				literal 1;
				add;
				dupe;
				get;
			}
			discard;
			
			// scanr 1
			literal 1;
			add;
			
			// open 0
			dupe;
			get;
			while {
				discard;
				
				// move 0 1
				literal 1;
				add;
				
				// close 0
				dupe;
				get;
			}
			discard;
			
			// close 1 133
			literal 1;
			add;
			dupe;
			get;
		}
		discard;
		
		// move 0 1
		literal 1;
		add;
		
		// open 0 165
		dupe;
		get;
		while {
			discard;
			
			// close 2 164
			literal 2;
			add;
			dupe;
			get;
		}
		discard;
		
		// close 2 126
		literal 2;
		add;
		dupe;
		get;
	}
	discard;
	
	// move 0 -2
	literal 2;
	sub;
	
	// open 0 171
	dupe;
	get;
	while {
		discard;
		
		// add 2 1
		literal 2;
		add;
		dupe;
		dupe;
		get;
		literal 1;
		add;
		store;
		
		// add 2 1
		literal 2;
		add;
		dupe;
		dupe;
		get;
		literal 1;
		add;
		store;
		
		// close 2 168
		literal 2;
		add;
		dupe;
		get;
	}
	discard;
	
	// move 0 -2
	literal 2;
	sub;
	
	// open 0 175
	dupe;
	get;
	while {
		discard;
		
		// sub 0 1
		dupe;
		dupe;
		get;
		literal 1;
		sub;
		add;
		literal 1;
		literal 0;
		hexmult;
		literal 0;
		hexmult;
		mod;
		store;
		
		// close 8 173
		literal 8;
		add;
		dupe;
		get;
	}
	discard;
	
	// move 0 -2
	literal 2;
	sub;
	
	// open 0 179
	dupe;
	get;
	while {
		discard;
		
		// output 1
		literal 1;
		add;
		dupe;
		get;
		print;
		
		// close 7 177
		literal 7;
		add;
		dupe;
		get;
	}
	discard;
	
	// move 0 -2
	literal 2;
	sub;
	
	// open 0 183
	dupe;
	get;
	while {
		discard;
		
		// sub 1 1
		literal 1;
		add;
		dupe;
		dupe;
		get;
		literal 1;
		sub;
		add;
		literal 1;
		literal 0;
		hexmult;
		literal 0;
		hexmult;
		mod;
		store;
		
		// close 5 181
		literal 5;
		add;
		dupe;
		get;
	}
	discard;
	
	// move 0 -2
	literal 2;
	sub;
	
	// open 0 187
	dupe;
	get;
	while {
		discard;
		
		// input 1
		literal 1;
		add;
		dupe;
		input;
		add;
		literal 1;
		literal 0;
		hexmult;
		literal 0;
		hexmult;
		mod;
		store;
		
		// close 3 185
		literal 3;
		add;
		dupe;
		get;
	}
	discard;
	
	// move 0 -2
	literal 2;
	sub;
	
	// open 0 191
	dupe;
	get;
	while {
		discard;
		
		// add 1 1
		literal 1;
		add;
		dupe;
		dupe;
		get;
		literal 1;
		add;
		store;
		
		// close 1 189
		literal 1;
		add;
		dupe;
		get;
	}
	discard;
	
	// move 0 -2
	literal 2;
	sub;
	
	// open 0 195
	dupe;
	get;
	while {
		discard;
		
		// add 0 1
		dupe;
		dupe;
		get;
		literal 1;
		add;
		store;
		
		// close -2 193
		literal 2;
		sub;
		dupe;
		get;
	}
	discard;
	
	// close -1 68
	literal 1;
	sub;
	dupe;
	get;
}
discard;

// open 0 202
dupe;
get;
while {
	discard;
	
	// input 0
	dupe;
	input;
	add;
	literal 1;
	literal 0;
	hexmult;
	literal 0;
	hexmult;
	mod;
	store;
	
	// output 0
	dupe;
	get;
	print;
	
	// output 0
	dupe;
	get;
	print;
	
	// output 0
	dupe;
	get;
	print;
	
	// close 0 197
	dupe;
	get;
}
discard;
